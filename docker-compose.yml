version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: dofamine
      POSTGRES_USER: dofamine_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dofamine_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis для кеширования (опционально)
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Django Web Application
  web:
    build: .
    command: gunicorn --bind 0.0.0.0:8000 --workers 3 core.wsgi:application
    volumes:
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=dofamine
      - DB_USER=dofamine_user
      - DB_PASSWORD=${DB_PASSWORD:-dofamine_password}
      - DB_HOST=db
      - DB_PORT=5432
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Nginx для статических файлов и прокси
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./staticfiles:/var/www/static
      - ./media:/var/www/media
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
